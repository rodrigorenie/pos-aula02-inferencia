predict.gamma
plot(renda ~ escolaridade, data=mec, ylim=c(0,2000), xlim=c(0,12), xaxt='n', yaxt='n')
plot(mec, data=mec, ylim=c(0,2000), xlim=c(0,12), xaxt='n', yaxt='n')
axis(side=1, at=seq(0, 12, by=1), labels=T)
axis(side=2, at=seq(0, 2000, by=250), labels=T)
lines(escolaridade, predict.linear, data=mec)
predict.linear
escolaridade
predict.values
lines(predict.values, predict.linear)
predict.linear
predict.values
lines(predict.values, predict.linear)
lines(seq(from=1, to=12, by=0.1), predict.linear)
predict.linear
plot(mec, data=mec, ylim=c(0,2000), xlim=c(0,12), xaxt='n', yaxt='n')
axis(side=1, at=seq(0, 12, by=1), labels=T)
axis(side=2, at=seq(0, 2000, by=250), labels=T)
points(seq(from=1, to=12, by=0.1), predict.linear)
points(seq(from=1, to=12, by=0.1), predict.linear, col='red')
points(predict.values, predict.linear, col='red')
plot(mec, data=mec, ylim=c(0,2000), xlim=c(0,12), xaxt='n', yaxt='n')
axis(side=1, at=seq(0, 12, by=1), labels=T)
axis(side=2, at=seq(0, 2000, by=250), labels=T)
points(predict.values, predict.linear, col='red')
points(predict.values[, escolaridade], predict.linear, col='red')
points(predict.values[, 'escolaridade'], predict.linear, col='red')
predict.linear <- predict(modelo.linear, data.frame(escolaridade=predict.values), type='response')
predict.gamma <- predict(modelo.gamma, predict.values, type='response')
plot(mec, data=mec, ylim=c(0,2000), xlim=c(0,12), xaxt='n', yaxt='n')
axis(side=1, at=seq(0, 12, by=1), labels=T)
axis(side=2, at=seq(0, 2000, by=250), labels=T)
points(predict.values, predict.linear, col='red')
predict.values
predict.linear
str(predict.linear)
points(predict.values, predict.linear, col='red')
points(predict.values, seq(from=1, to=12, by=0.1), col='red')
points(seq(from=1, to=12, by=0.1), seq(from=1, to=12, by=0.1), col='red')
predict.linear
points(predict.values, predict.linear, col='red')
points(predict.values, predict.linear, col='red')
axis(side=1, at=seq(0, 12, by=1), labels=T)
axis(side=2, at=seq(0, 2000, by=250), labels=T)
plot(mec, data=mec, ylim=c(0,2000), xlim=c(0,12), xaxt='n', yaxt='n')
axis(side=1, at=seq(0, 12, by=1), labels=T)
axis(side=2, at=seq(0, 2000, by=250), labels=T)
points(predict.values, predict.linear, col='red')
predict.linear
modelo.linear <- lm(renda ~ escolaridade, data=mec)
predict.values <- seq(from=0, to=12, by=0.1)
predict.linear <- predict(modelo.linear, data.frame(escolaridade=predict.values), type='response')
predict.gamma <- predict(modelo.gamma, predict.values, type='response')
predict.linear <- predict(modelo.linear, data.frame(escolaridade=predict.values), type='response')
predict.gamma <- predict(modelo.gamma, data.frame(escolaridade=predict.values), type='response')
plot(mec, data=mec, ylim=c(0,2000), xlim=c(0,12), xaxt='n', yaxt='n')
axis(side=1, at=seq(0, 12, by=1), labels=T)
axis(side=2, at=seq(0, 2000, by=250), labels=T)
points(predict.values, predict.linear, col='red')
plot(mec, data=mec, ylim=c(0,2000), xlim=c(0,12), xaxt='n', yaxt='n')
axis(side=1, at=seq(0, 12, by=1), labels=T)
axis(side=2, at=seq(0, 2000, by=250), labels=T)
points(predict.values, predict.linear, col='red')
plot(mec, data=mec, ylim=c(0,2000), xlim=c(0,12), xaxt='n', yaxt='n')
axis(side=1, at=seq(-2, 12, by=1), labels=T)
axis(side=2, at=seq(-250, 2000, by=250), labels=T)
plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), xaxt='n', yaxt='n')
axis(side=1, at=seq(-2, 12, by=1), labels=T)
axis(side=2, at=seq(-250, 2000, by=250), labels=T)
points(predict.values, predict.linear, col='red')
lines(predict.values, predict.linear, col='red')
plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), xaxt='n', yaxt='n')
axis(side=1, at=seq(-2, 12, by=1), labels=T)
axis(side=2, at=seq(-250, 2000, by=250), labels=T)
lines(predict.values, predict.linear, col='red')
lines(predict.values, predict.gamma, col='red')
lines(predict.values, predict.gamma, col='blue')
plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), xaxt='n', yaxt='n')
axis(side=1, at=seq(-2, 12, by=1), labels=T)
axis(side=2, at=seq(-250, 2000, by=250), labels=T)
lines(predict.values, predict.linear, col='red')
lines(predict.values, predict.gamma, col='blue')
predict.values <- seq(from=0, to=10, by=0.25)
predict.linear <- predict(modelo.linear, data.frame(escolaridade=predict.values), type='response')
predict.gamma <- predict(modelo.gamma, data.frame(escolaridade=predict.values), type='response')
plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), xaxt='n', yaxt='n')
axis(side=1, at=seq(-2, 12, by=1), labels=T)
axis(side=2, at=seq(-250, 2000, by=250), labels=T)
lines(predict.values, predict.linear, col='red')
lines(predict.values, predict.gamma, col='blue')
points(predict.values, predict.linear, col='red')
points(predict.values, predict.gamma, col='blue')
plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), xaxt='n', yaxt='n')
axis(side=1, at=seq(-2, 12, by=1), labels=T)
axis(side=2, at=seq(-250, 2000, by=250), labels=T)
points(predict.values, predict.linear, col='red')
points(predict.values, predict.gamma, col='blue')
?points(predict.values, predict.linear, col='red')
plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), xaxt='n', yaxt='n')
axis(side=1, at=seq(-2, 12, by=1), labels=T)
axis(side=2, at=seq(-250, 2000, by=250), labels=T)
points(predict.values, predict.linear, col='red', pch=20)
points(predict.values, predict.gamma, col='blue', pch=20)
predict.values <- seq(from=0, to=12, by=0.25)
predict.linear <- predict(modelo.linear, data.frame(escolaridade=predict.values), type='response')
predict.gamma <- predict(modelo.gamma, data.frame(escolaridade=predict.values), type='response')
plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), xaxt='n', yaxt='n')
axis(side=1, at=seq(-2, 12, by=1), labels=T)
axis(side=2, at=seq(-250, 2000, by=250), labels=T)
points(predict.values, predict.linear, col='red', pch=20)
points(predict.values, predict.gamma, col='blue', pch=20)
abline(h=0)
plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), xaxt='n', yaxt='n', pch=1)
?plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), xaxt='n', yaxt='n', pch=1)
?points(predict.values, predict.linear, col='red', pch=20)
?plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), xaxt='n', yaxt='n', pch=0)
plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), xaxt='n', yaxt='n', pch=0)
axis(side=1, at=seq(-2, 12, by=1), labels=T)
axis(side=2, at=seq(-250, 2000, by=250), labels=T)
?points(predict.values, predict.linear, col='red', pch=20)
points(predict.values, predict.gamma, col='blue', pch=20)
points(predict.values, predict.linear, col='red', pch=20)
?points(predict.values, predict.linear, col='red', pch=20)
plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), xaxt='n', yaxt='n', pch=15)
axis(side=1, at=seq(-2, 12, by=1), labels=T)
axis(side=2, at=seq(-250, 2000, by=250), labels=T)
points(predict.values, predict.linear, col='red', pch=20)
points(predict.values, predict.gamma, col='blue', pch=20)
plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), xaxt='n', yaxt='n', pch=3)
axis(side=1, at=seq(-2, 12, by=1), labels=T)
axis(side=2, at=seq(-250, 2000, by=250), labels=T)
points(predict.values, predict.linear, col='red', pch=20)
points(predict.values, predict.gamma, col='blue', pch=20)
?points(predict.values, predict.linear, col='red', pch=20)
plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), xaxt='n', yaxt='n', pch=10)
axis(side=1, at=seq(-2, 12, by=1), labels=T)
axis(side=2, at=seq(-250, 2000, by=250), labels=T)
points(predict.values, predict.linear, col='red', pch=20)
points(predict.values, predict.gamma, col='blue', pch=20)
predict.invgaus <- predict(modelo.invgaus, data.frame(escolaridade=predict.values), type='response')
points(predict.values, predict.invgaus, col='green', pch=20)
predict.values <- seq(from=0, to=12, by=0.25)
predict.dataframe <- ata.frame(escolaridade=predict.values)
predict.linear <- predict(modelo.linear, predict.dataframe, type='response')
predict.gamma <- predict(modelo.gamma, predict.dataframe, type='response')
predict.invgaus <- predict(modelo.invgaus, predict.dataframe, type='response')
plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), xaxt='n', yaxt='n', pch=10)
axis(side=1, at=seq(-2, 12, by=1), labels=T)
axis(side=2, at=seq(-250, 2000, by=250), labels=T)
points(predict.values, predict.linear, col='red', pch=20)
points(predict.values, predict.gamma, col='blue', pch=20)
points(predict.values, predict.invgaus, col='green', pch=20)
abline(h=0)
plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), pch=10,
xaxt='n', yaxt='n')
axis(side=1, at=seq(-2, 12, by=1), labels=T)
axis(side=2, at=seq(-250, 2000, by=250), labels=T)
points(predict.values, predict.linear, col='red', pch=20)
points(predict.values, predict.gamma, col='blue', pch=20)
lines(predict.values, predict.gamma, col='blue', pch=20)
modelo.gamma <- glm(renda ~ escolaridade, data=mec, family=Gamma(link='log'))
predict.gamma <- predict(modelo.gamma, predict.dataframe, type='response')
points(predict.values, predict.linear, col='red', pch=20)
points(predict.values, predict.gamma, col='blue', pch=20)
lines(predict.values, predict.gamma, col='blue', pch=20)
modelo.gamma <- glm(renda ~ escolaridade, data=mec, family=Gamma(link='log'))
modelo.invgaus <- glm(renda ~ escolaridade, data=mec, family=inverse.gaussian)
predict.values <- seq(from=0, to=12, by=0.25)
predict.dataframe <- data.frame(escolaridade=predict.values)
predict.linear <- predict(modelo.linear, predict.dataframe, type='response')
predict.gamma <- predict(modelo.gamma, predict.dataframe, type='response')
predict.invgaus <- predict(modelo.invgaus, predict.dataframe, type='response')
plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), pch=10,
xaxt='n', yaxt='n')
axis(side=1, at=seq(-2, 12, by=1), labels=T)
axis(side=2, at=seq(-250, 2000, by=250), labels=T)
points(predict.values, predict.linear, col='red', pch=20)
points(predict.values, predict.gamma, col='blue', pch=20)
points(predict.values, predict.invgaus, col='green', pch=20)
abline(h=0)
modelo.gamma <- glm(renda ~ escolaridade, data=mec, family=Gamma(link='log'))
modelo.invgaus <- glm(renda ~ escolaridade, data=mec, family=inverse.gaussian)
predict.values <- seq(from=0, to=12, by=0.25)
predict.dataframe <- data.frame(escolaridade=predict.values)
predict.linear <- predict(modelo.linear, predict.dataframe, type='response')
predict.gamma <- predict(modelo.gamma, predict.dataframe, type='response')
predict.invgaus <- predict(modelo.invgaus, predict.dataframe, type='response')
plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), pch=10,
xaxt='n', yaxt='n')
axis(side=1, at=seq(-2, 12, by=1), labels=T)
axis(side=2, at=seq(-250, 2000, by=250), labels=T)
points(predict.values, predict.linear, col='red', pch=20)
points(predict.values, predict.gamma, col='blue', pch=20)
#points(predict.values, predict.invgaus, col='green', pch=20)
abline(h=0)
lines(predict.values, predict.gamma, col='blue', pch=20)
modelo.gamma <- glm(renda ~ escolaridade, data=mec, family=Gamma(link='log'))
modelo.invgaus <- glm(renda ~ escolaridade, data=mec, family=inverse.gaussian())
predict.values <- seq(from=0, to=12, by=0.25)
predict.dataframe <- data.frame(escolaridade=predict.values)
predict.linear <- predict(modelo.linear, predict.dataframe, type='response')
predict.gamma <- predict(modelo.gamma, predict.dataframe, type='response')
predict.invgaus <- predict(modelo.invgaus, predict.dataframe, type='response')
plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), pch=10,
xaxt='n', yaxt='n')
axis(side=1, at=seq(-2, 12, by=1), labels=T)
axis(side=2, at=seq(-250, 2000, by=250), labels=T)
points(predict.values, predict.linear, col='red', pch=20)
points(predict.values, predict.gamma, col='blue', pch=20)
points(predict.values, predict.invgaus, col='green', pch=20)
abline(h=0)
modelo.gamma <- glm(renda ~ escolaridade, data=mec, family=Gamma(link='log'))
modelo.invgaus <- glm(renda ~ escolaridade, data=mec, family=inverse.gaussian(link='log'))
predict.values <- seq(from=0, to=12, by=0.25)
predict.dataframe <- data.frame(escolaridade=predict.values)
predict.linear <- predict(modelo.linear, predict.dataframe, type='response')
predict.gamma <- predict(modelo.gamma, predict.dataframe, type='response')
predict.invgaus <- predict(modelo.invgaus, predict.dataframe, type='response')
plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), pch=10,
xaxt='n', yaxt='n')
axis(side=1, at=seq(-2, 12, by=1), labels=T)
axis(side=2, at=seq(-250, 2000, by=250), labels=T)
points(predict.values, predict.linear, col='red', pch=20)
points(predict.values, predict.gamma, col='blue', pch=20)
points(predict.values, predict.invgaus, col='green', pch=20)
abline(h=0)
?points(predict.values, predict.invgaus, col='green', pch=20)
plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), pch=10,
xaxt='n', yaxt='n')
axis(side=1, at=seq(-2, 12, by=1), labels=T)
axis(side=2, at=seq(-250, 2000, by=250), labels=T)
points(predict.values, predict.linear, col='red', pch=20)
points(predict.values, predict.gamma, col='blue', pch=20)
points(predict.values, predict.invgaus, col='green', pch=18)
modelo.gamma <- glm(renda ~ escolaridade, data=mec, family=Gamma(link='log'))
modelo.invgaus <- glm(renda ~ escolaridade, data=mec, family=inverse.gaussian(link='log'))
predict.values <- seq(from=0, to=12, by=0.25)
predict.dataframe <- data.frame(escolaridade=predict.values)
predict.linear <- predict(modelo.linear, predict.dataframe, type='response')
predict.gamma <- predict(modelo.gamma, predict.dataframe, type='response')
predict.invgaus <- predict(modelo.invgaus, predict.dataframe, type='response')
plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), pch=10,
xaxt='n', yaxt='n')
axis(side=1, at=seq(-2, 12, by=1), labels=T)
axis(side=2, at=seq(-250, 2000, by=250), labels=T)
points(predict.values, predict.linear, col='red', pch=20)
points(predict.values, predict.gamma, col='blue', pch=20)
points(predict.values, predict.invgaus, col='green', pch=18)
abline(h=0)
lines(predict.values, predict.invgaus, col='green', pch=18)
modelo.gamma <- glm(renda ~ escolaridade, data=mec, family=Gamma(link='log'))
modelo.invgaus <- glm(renda ~ escolaridade, data=mec, family=inverse.gaussian(link='log'))
predict.values <- seq(from=0, to=12, by=0.25)
predict.dataframe <- data.frame(escolaridade=predict.values)
predict.linear <- predict(modelo.linear, predict.dataframe, type='response')
predict.gamma <- predict(modelo.gamma, predict.dataframe, type='response')
predict.invgaus <- predict(modelo.invgaus, predict.dataframe, type='response')
plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), pch=10,
xaxt='n', yaxt='n')
axis(side=1, at=seq(-2, 12, by=1), labels=T)
axis(side=2, at=seq(-250, 2000, by=250), labels=T)
points(predict.values, predict.linear, col='red', pch=20)
points(predict.values, predict.gamma, col='blue', pch=20)
lines(predict.values, predict.invgaus, col='green', pch=18)
abline(h=0)
plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), pch=10,
xaxt='n', yaxt='n')
axis(side=1, at=seq(-2, 12, by=1), labels=T)
axis(side=2, at=seq(-250, 2000, by=250), labels=T)
points(predict.values, predict.linear, col='red', pch=20)
points(predict.values, predict.gamma, col='blue', pch=20)
lines(predict.values, predict.invgaus, col='orange')
abline(h=0)
modelo.gamma <- glm(renda ~ escolaridade, data=mec, family=Gamma(link='log'))
modelo.invgaus <- glm(renda ~ escolaridade, data=mec, family=inverse.gaussian(link='log'))
predict.values <- seq(from=0, to=12, by=0.25)
predict.dataframe <- data.frame(escolaridade=predict.values)
predict.linear <- predict(modelo.linear, predict.dataframe, type='response')
predict.gamma <- predict(modelo.gamma, predict.dataframe, type='response')
predict.invgaus <- predict(modelo.invgaus, predict.dataframe, type='response')
plot(mec, data=mec, ylim=c(-250,2000), xlim=c(-2,12), pch=10,
xaxt='n', yaxt='n')
axis(side=1, at=seq(-2, 12, by=1), labels=T)
axis(side=2, at=seq(-250, 2000, by=250), labels=T)
points(predict.values, predict.linear, col='red', pch=20)
points(predict.values, predict.gamma, col='blue', pch=20)
lines(predict.values, predict.invgaus, col='green')
abline(h=0)
AIC(modelo.linear, modelo.gamma, modelo.invgaus)
lprod <- c(5.4, 4.5, 4.7, 4.0, 3.9, 5.3, 5.4, 5.1, 5.9, 7.1, 4.5, 2.7, 6.0, 4.3,
4.3, 6.0, 4.7, 3.8, 5.2, 4.9, 5.0, 5.4, 4.6, 5.6, 4.8, 5.3, 6.1, 5.4,
4.7, 6.1, 6.0, 5.5, 5.2, 4.4, 6.4, 4.4, 7.2, 6.5, 4.8, 4.0)
lprod.median <- median(lprod)
lprod <- c(5.4, 4.5, 4.7, 4.0, 3.9, 5.3, 5.4, 5.1, 5.9, 7.1, 4.5, 2.7, 6.0, 4.3,
4.3, 6.0, 4.7, 3.8, 5.2, 4.9, 5.0, 5.4, 4.6, 5.6, 4.8, 5.3, 6.1, 5.4,
4.7, 6.1, 6.0, 5.5, 5.2, 4.4, 6.4, 4.4, 7.2, 6.5, 4.8, 4.0)
lprod.median <- median(lprod)
lprod.mean <- mean(lprod)
boxplot(lprod)
hist(lprod)
lprod <- c(5.4, 4.5, 4.7, 4.0, 3.9, 5.3, 5.4, 5.1, 5.9, 7.1, 4.5, 2.7, 6.0, 4.3,
4.3, 6.0, 4.7, 3.8, 5.2, 4.9, 5.0, 5.4, 4.6, 5.6, 4.8, 5.3, 6.1, 5.4,
4.7, 6.1, 6.0, 5.5, 5.2, 4.4, 6.4, 4.4, 7.2, 6.5, 4.8, 4.0)
lprod.median <- median(lprod)
lprod.mean <- mean(lprod)
lprod.sd <- sd(lprod)
lprod.1qt <- as.numeric(quantile(lprod)['25%'])
lprod.2qt <- as.numeric(quantile(lprod)['50%'])
lprod.3qt <- as.numeric(quantile(lprod)['75%'])
boxplot(lprod)
hist(lprod)
# P(4.2 < X < 5.2) = P(X < 5.2) - P(X < 4.2)
getz <- function(x, mean=0, sd=0) {
if (missing(mean)) {
mean <- mean(x)
}
if (missing(sd)) {
sd <- sd(x)
}
return ((x - mean)/sd)
}
# P(X < 5.2)
PZ_5.2 <- pnorm(getz(5.2, lprod.mean, lprod.sd))
PZ_5.2
# P(X < 4.2)
PZ_4.2 <- pnorm(getz(4.2, lprod.mean, lprod.sd))
PZ_4.2
P <- PZ_5.2 - PZ_4.2
P
curve(dnorm(x, mean=mean(lprod), sd=sd(lprod)),
from = min(lprod), to = max(lprod),
ylab="Densidade", xlab="Peso", xaxt='n')
axis(side=1, at=seq(min(lprod), max(lprod), by=0.5), labels=T)
seqx <- seq(4.2, 5.2, by=0.2)
xp <- c(4.2, seqx, 5.2)
yp <- c(0, dnorm(seqx, lprod.mean, lprod.sd), 0)
polygon(xp, yp, col="green")
abline(v=lprod.median, lty="dashed")
text(5, 0.05, sprintf("P = %.2f", P) , adj=c(1,0))
lprod <- c(5.4, 4.5, 4.7, 4.0, 3.9, 5.3, 5.4, 5.1, 5.9, 7.1, 4.5, 2.7, 6.0, 4.3,
4.3, 6.0, 4.7, 3.8, 5.2, 4.9, 5.0, 5.4, 4.6, 5.6, 4.8, 5.3, 6.1, 5.4,
4.7, 6.1, 6.0, 5.5, 5.2, 4.4, 6.4, 4.4, 7.2, 6.5, 4.8, 4.0)
lprod.median <- median(lprod)
lprod.mean <- median(lprod)
lprod.sd <- sd(lprod)
lprod.1qt <- as.numeric(quantile(lprod)['25%'])
lprod.2qt <- as.numeric(quantile(lprod)['50%'])
lprod.3qt <- as.numeric(quantile(lprod)['75%'])
boxplot(lprod)
hist(lprod)
# P(4.2 < X < 5.2) = P(X < 5.2) - P(X < 4.2)
getz <- function(x, mean=0, sd=0) {
if (missing(mean)) {
mean <- mean(x)
}
if (missing(sd)) {
sd <- sd(x)
}
return ((x - mean)/sd)
}
# P(X < 5.2)
PZ_5.2 <- pnorm(getz(5.2, lprod.mean, lprod.sd))
PZ_5.2
# P(X < 4.2)
PZ_4.2 <- pnorm(getz(4.2, lprod.mean, lprod.sd))
PZ_4.2
P <- PZ_5.2 - PZ_4.2
P
curve(dnorm(x, mean=mean(lprod), sd=sd(lprod)),
from = min(lprod), to = max(lprod),
ylab="Densidade", xlab="Peso", xaxt='n')
axis(side=1, at=seq(min(lprod), max(lprod), by=0.5), labels=T)
seqx <- seq(4.2, 5.2, by=0.2)
xp <- c(4.2, seqx, 5.2)
yp <- c(0, dnorm(seqx, lprod.mean, lprod.sd), 0)
polygon(xp, yp, col="green")
abline(v=lprod.median, lty="dashed")
text(5, 0.05, sprintf("P = %.2f", P) , adj=c(1,0))
lprod <- c(5.4, 4.5, 4.7, 4.0, 3.9, 5.3, 5.4, 5.1, 5.9, 7.1, 4.5, 2.7, 6.0, 4.3,
4.3, 6.0, 4.7, 3.8, 5.2, 4.9, 5.0, 5.4, 4.6, 5.6, 4.8, 5.3, 6.1, 5.4,
4.7, 6.1, 6.0, 5.5, 5.2, 4.4, 6.4, 4.4, 7.2, 6.5, 4.8, 4.0)
lprod.median <- median(lprod)
lprod.mean <- mean(lprod)
lprod.sd <- sd(lprod)
lprod.1qt <- as.numeric(quantile(lprod)['25%'])
lprod.2qt <- as.numeric(quantile(lprod)['50%'])
lprod.3qt <- as.numeric(quantile(lprod)['75%'])
boxplot(lprod)
hist(lprod)
# P(4.2 < X < 5.2) = P(X < 5.2) - P(X < 4.2)
getz <- function(x, mean=0, sd=0) {
if (missing(mean)) {
mean <- mean(x)
}
if (missing(sd)) {
sd <- sd(x)
}
return ((x - mean)/sd)
}
# P(X < 5.2)
PZ_5.2 <- pnorm(getz(5.2, lprod.mean, lprod.sd))
PZ_5.2
# P(X < 4.2)
PZ_4.2 <- pnorm(getz(4.2, lprod.mean, lprod.sd))
PZ_4.2
P <- PZ_5.2 - PZ_4.2
P
curve(dnorm(x, mean=mean(lprod), sd=sd(lprod)),
from = min(lprod), to = max(lprod),
ylab="Densidade", xlab="Peso", xaxt='n')
axis(side=1, at=seq(min(lprod), max(lprod), by=0.5), labels=T)
seqx <- seq(4.2, 5.2, by=0.2)
xp <- c(4.2, seqx, 5.2)
yp <- c(0, dnorm(seqx, lprod.mean, lprod.sd), 0)
polygon(xp, yp, col="green")
abline(v=lprod.median, lty="dashed")
text(5, 0.05, sprintf("P = %.2f", P) , adj=c(1,0))
lprod <- c(5.4, 4.5, 4.7, 4.0, 3.9, 5.3, 5.4, 5.1, 5.9, 7.1, 4.5, 2.7, 6.0, 4.3,
4.3, 6.0, 4.7, 3.8, 5.2, 4.9, 5.0, 5.4, 4.6, 5.6, 4.8, 5.3, 6.1, 5.4,
4.7, 6.1, 6.0, 5.5, 5.2, 4.4, 6.4, 4.4, 7.2, 6.5, 4.8, 4.0)
lprod.mean <- mean(lprod)
lprod.sd <- sd(lprod)
## A probabilidade de X estar entre 4.2 e 5.2 é igual
## a probabilidade de x ser menor que 5.2 menos
## a probabilidade do x ser menor que 4.2, portanto:
## P(4.2 < X < 5.2) = P(X < 5.2) - P(X < 4.2)
getz <- function(x, mean=0, sd=0) {
if (missing(mean)) {
mean <- mean(x)
}
if (missing(sd)) {
sd <- sd(x)
}
return ((x - mean)/sd)
}
PZ_5.2 <- pnorm(getz(5.2, lprod.mean, lprod.sd))
PZ_4.2 <- pnorm(getz(4.2, lprod.mean, lprod.sd))
P <- PZ_5.2 - PZ_4.2
curve(dnorm(x, mean=mean(lprod), sd=sd(lprod)),
from = min(lprod), to = max(lprod),
ylab="Densidade", xlab="Peso", xaxt='n')
axis(side=1, at=seq(min(lprod), max(lprod), by=0.5), labels=T)
seqx <- seq(4.2, 5.2, by=0.2)
xp <- c(4.2, seqx, 5.2)
yp <- c(0, dnorm(seqx, lprod.mean, lprod.sd), 0)
polygon(xp, yp, col="green")
abline(v=lprod.median, lty="dashed")
text(5, 0.05, sprintf("P = %.2f", P) , adj=c(1,0))
lprod <- c(5.4, 4.5, 4.7, 4.0, 3.9, 5.3, 5.4, 5.1, 5.9, 7.1, 4.5, 2.7, 6.0, 4.3,
4.3, 6.0, 4.7, 3.8, 5.2, 4.9, 5.0, 5.4, 4.6, 5.6, 4.8, 5.3, 6.1, 5.4,
4.7, 6.1, 6.0, 5.5, 5.2, 4.4, 6.4, 4.4, 7.2, 6.5, 4.8, 4.0)
lprod.median <- median(lprod)
lprod.mean <- mean(lprod)
lprod.sd <- sd(lprod)
## A probabilidade de X estar entre 4.2 e 5.2 é igual
## a probabilidade de x ser menor que 5.2 menos
## a probabilidade do x ser menor que 4.2, portanto:
## P(4.2 < X < 5.2) = P(X < 5.2) - P(X < 4.2)
getz <- function(x, mean=0, sd=0) {
if (missing(mean)) {
mean <- mean(x)
}
if (missing(sd)) {
sd <- sd(x)
}
return ((x - mean)/sd)
}
PZ_5.2 <- pnorm(getz(5.2, lprod.mean, lprod.sd))
PZ_4.2 <- pnorm(getz(4.2, lprod.mean, lprod.sd))
P <- PZ_5.2 - PZ_4.2
curve(dnorm(x, mean=mean(lprod), sd=sd(lprod)),
from = min(lprod), to = max(lprod),
ylab="Densidade", xlab="Peso", xaxt='n')
axis(side=1, at=seq(min(lprod), max(lprod), by=0.5), labels=T)
seqx <- seq(4.2, 5.2, by=0.2)
xp <- c(4.2, seqx, 5.2)
yp <- c(0, dnorm(seqx, lprod.mean, lprod.sd), 0)
polygon(xp, yp, col="green")
abline(v=lprod.median, lty="dashed")
text(5, 0.05, sprintf("P = %.2f", P) , adj=c(1,0))
P
#
# Exercício 1
#
library(TeachingDemos)
amostra <- c(1.9, 1.7, 2.8, 2.4, 2.6, 2.5, 2.8, 3.2, 1.6, 2.5)
mu <- 2
sigma <- 0.5
significancia <- 0.05
confianca <- 1 - significancia
k1 <- significancia/2
k2 <- confianca + significancia/2
media <- median(amostra)
n <- length(amostra)
Z <- (media - mu)/(sigma / sqrt(n))
Zk2 <- qnorm(k2)
if (Z > Zk2) {
print('Rejeita-se a Hipósete Nula (H0)')
} else {
print('Aceita-se a Hipósete Nula (H0)')
}
pvalue <- z.test(x=amostra ,mu=mu, stdev=sigma, alternative='greater')$p.value
if (pvalue >= significancia) {
print('Aceita-se a Hipósete Nula (H0)')
} else {
print('Rejeita-se a Hipósete Nula (H0)')
}
hist(amostra, probability=T, xlim=c(0,4), ylim=c(0,0.8), xaxt='n', yaxt='n')
axis(side=1, at=seq(0, 6, by=0.5), labels=T)
axis(side=2, at=seq(0, 0.8, by=0.1), labels=T)
curve(expr = dnorm(x, mean=mu , sd=sigma), col = "red", add=T)
abline(v=median(amostra), col='blue')
